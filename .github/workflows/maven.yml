name: Build Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  packages: write
  actions: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

      - name: Grant execute permission for Gradlew
        run: chmod +x ./gradlew

      - name: Get Version
        run: ./gradlew version

      - name: Check version file contents
        run: cat version.txt

      - name: Ensure version file is not empty
        run: if [ -s version.txt ]; then echo "version.txt is not empty"; else echo "version.txt is empty"; exit 1; fi

      - name: Set version to environment variable
        run: echo "VERSION=$(cat version.txt | tr -d '[:space:]')" >> $GITHUB_ENV

      - name: Read version output
        run: echo "Version is ${{ env.VERSION }}"

      - name: Validate version
        run: |
          if [ -z "${{ env.VERSION }}" ]; then
            echo "Version not found."
            exit 1
          fi

      - name: Build with Gradle
        run: ./gradlew fatJar

      - name: Bump version and push tag
        id: tag
        uses: anothrNick/github-tag-action@1.67.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          CUSTOM_TAG: ${{ env.VERSION }}

      - name: Output the tag
        run: echo "tag=${{ steps.tag.outputs.new_tag }}" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            build/libs/*
          tag_name: ${{ steps.tag.outputs.new_tag }}

      # The USERNAME and TOKEN need to correspond to the credentials environment variables used in
      # the publishing section of your build.gradle
      - name: Publish to GitHub Packages
        run: ./gradlew publish -PreposiliteRepositoryUsername=${{ secrets.MAVEN_NAME }} -PreposiliteRepositoryPassword=${{ secrets.MAVEN_SECRET }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
