plugins {
    id 'java'
    id 'maven-publish'
}

def RuneBotClientAPIVersion = '0.1.28'

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/Runebotium/RunebotClientAPI")
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
        maven {
            name = "reposiliteRepository"
            url = "https://repo.leigham.uk/releases/runebotclientapi"
            credentials(PasswordCredentials)
            authentication {
                basic(BasicAuthentication)
            }
        }
    }
}

version = RuneBotClientAPIVersion

repositories {
    mavenLocal()
    maven {
        url = 'https://repo.runelite.net'
    }
    mavenCentral()
}

def runeLiteVersion = 'latest.release'

dependencies {
    compileOnly group: 'net.runelite', name: 'client', version: runeLiteVersion
    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'
    testImplementation 'junit:junit:4.12'
    testImplementation group: 'net.runelite', name: 'client', version: runeLiteVersion
    testImplementation group: 'net.runelite', name: 'jshell', version: runeLiteVersion
    implementation 'org.json:json:20230227'
    implementation 'org.roaringbitmap:RoaringBitmap:0.9.44'
    implementation 'org.benf:cfr:0.151'
    implementation 'org.java-websocket:Java-WebSocket:1.5.2'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.0.1'
    implementation 'com.google.inject:guice:4.1.0'
}

sourceSets {
    main {
        java {
            srcDir "src"
        }
    }
}

group = 'com.example'
sourceCompatibility = "11"

task FatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'com.example.Main'
    }
    getArchiveBaseName().set("runebotclientapi")
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from sourceSets.main.output
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

assemble.dependsOn(FatJar)

task('version') {
    doLast {
        def version = RuneBotClientAPIVersion
        new File('version.txt').text = version
        println "Version $version has been written to version.txt"
    }
}


// Output environment variables for debugging
task('outputenv') {
    dependsOn('assemble')
    doLast {
        println "GITHUB_ACTOR: " + System.getenv("GITHUB_ACTOR")
        println "GITHUB_TOKEN: " + System.getenv("GITHUB_TOKEN")
    }
}
