plugins {
    id 'java'
    id 'maven-publish'
}

def RuneBotClientAPIVersion = '0.0.10-beta'

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    repositories {
        maven {
            name = "reposiliteRepository"
            url = "https://repo.leigham.uk/releases/runebotclientapi"
            credentials(PasswordCredentials)
            authentication {
                basic(BasicAuthentication)
            }
        }
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/Runebotium/RunebotClientAPI_MVN")
            credentials {
                username = ""
                password = ""
            }
        }
    }
}


repositories {
    mavenLocal()
    maven {
        url = 'https://repo.runelite.net'
    }
    mavenCentral()
}

def runeLiteVersion = 'latest.release'

dependencies {
    compileOnly group: 'net.runelite', name: 'client', version: runeLiteVersion
    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'
    testImplementation 'junit:junit:4.12'
    testImplementation group: 'net.runelite', name: 'client', version: runeLiteVersion
    testImplementation group: 'net.runelite', name: 'jshell', version: runeLiteVersion

    implementation 'org.roaringbitmap:RoaringBitmap:0.9.44'
    implementation 'org.benf:cfr:0.151'

    // org.java-websocket
    implementation 'org.json:json:20230227'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.0.1'
    implementation 'org.java-websocket:Java-WebSocket:1.5.2'

}
sourceSets {
    main {
        java {
            srcDir "src"
        }
    }
}

group = 'com.example'
version = RuneBotClientAPIVersion
sourceCompatibility = "11"

task FarJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'com.example.Main'
    }
    getArchiveBaseName().set("runebotclientapi")
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
targetCompatibility = JavaVersion.VERSION_11

